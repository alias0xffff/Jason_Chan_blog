2021-07-19 00:28:21.130  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/about', httpMethodd='GET', classMethod='com.jasonc.blog.controller.AboutShowController.about', requestParams={}, result=about, timeCost=0}
2021-07-19 00:28:21.464  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@b08b3e1, timeCost=0}
2021-07-19 00:28:21.485  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@2b6b71a6}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=156, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=19}
2021-07-19 00:28:22.741  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=156, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=1286}
2021-07-19 00:30:32.530  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/about', httpMethodd='GET', classMethod='com.jasonc.blog.controller.AboutShowController.about', requestParams={}, result=about, timeCost=1}
2021-07-19 00:30:32.901  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@6c81ebe, timeCost=0}
2021-07-19 00:30:32.913  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@3dc822a5}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=156, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=11}
2021-07-19 00:30:32.916  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=156, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=17}
2021-07-19 00:30:47.047  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/about', httpMethodd='GET', classMethod='com.jasonc.blog.controller.AboutShowController.about', requestParams={}, result=about, timeCost=0}
2021-07-19 00:30:47.328  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@e042843, timeCost=0}
2021-07-19 00:30:47.335  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@16e54b8b}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=156, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=7}
2021-07-19 00:30:47.338  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=156, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=12}
2021-07-19 00:47:59.095  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@66a7bca0}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@66a7bca0, timeCost=14}
2021-07-19 00:47:59.097  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 00:47:59.099  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 00:47:59.101  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=2}
2021-07-19 00:47:59.103  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=2}
2021-07-19 00:47:59.103  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@66a7bca0}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@66a7bca0, timeCost=22}
2021-07-19 00:47:59.109  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=3}
2021-07-19 00:47:59.111  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=6}
2021-07-19 00:47:59.116  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=4}
2021-07-19 00:47:59.117  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=6}
2021-07-19 00:47:59.123  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=4}
2021-07-19 00:47:59.124  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=6}
2021-07-19 00:47:59.125  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@66a7bca0, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=47}
2021-07-19 00:47:59.402  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@55ae0c16, timeCost=0}
2021-07-19 00:47:59.406  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@6aa84c83}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=156, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=4}
2021-07-19 00:47:59.430  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=156, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=29}
2021-07-19 00:48:53.043  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectById', requestParams={id=35}, result=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=156, typeId=16, userId=1}, timeCost=3}
2021-07-19 00:48:53.740  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.updateById', requestParams={entity=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=157, typeId=16, userId=1}}, result=1, timeCost=349}
2021-07-19 00:48:53.880  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 00:48:53.880  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getBlogDetailDTOAndConvertToMarkdownById', requestParams={blogId=35}, result=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=157, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, timeCost=843}
2021-07-19 00:48:53.939  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=9}
2021-07-19 00:48:53.942  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=2}
2021-07-19 00:48:53.944  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=2}
2021-07-19 00:48:53.947  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=3}
2021-07-19 00:48:53.949  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=2}
2021-07-19 00:48:53.951  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=2}
2021-07-19 00:48:53.952  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=43}
2021-07-19 00:48:53.952  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.blog', requestParams={model={blog=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=157, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, id=35}, result=blog, timeCost=917}
2021-07-19 00:48:54.301  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@13d7e61c, timeCost=0}
2021-07-19 00:48:54.306  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@35f55450}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=157, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=4}
2021-07-19 00:48:54.649  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=157, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=350}
2021-07-19 00:48:54.765  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=2}
2021-07-19 00:48:54.767  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=2}
2021-07-19 00:48:54.770  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=3}
2021-07-19 00:48:54.772  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=2}
2021-07-19 00:48:54.774  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=2}
2021-07-19 00:48:54.776  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=2}
2021-07-19 00:48:54.776  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=13}
2021-07-19 00:48:54.776  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.CommentController.comments', requestParams={model={comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, blogid=35}, result=blog :: commentList, timeCost=22}
2021-07-19 00:51:19.493  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectById', requestParams={id=35}, result=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=157, typeId=16, userId=1}, timeCost=2}
2021-07-19 00:51:19.503  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.updateById', requestParams={entity=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=158, typeId=16, userId=1}}, result=1, timeCost=5}
2021-07-19 00:51:19.508  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 00:51:19.509  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getBlogDetailDTOAndConvertToMarkdownById', requestParams={blogId=35}, result=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=158, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, timeCost=21}
2021-07-19 00:51:19.526  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=4}
2021-07-19 00:51:19.529  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=2}
2021-07-19 00:51:19.531  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=2}
2021-07-19 00:51:19.533  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=2}
2021-07-19 00:51:19.535  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=1}
2021-07-19 00:51:19.538  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=2}
2021-07-19 00:51:19.538  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=16}
2021-07-19 00:51:19.538  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.blog', requestParams={model={blog=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=158, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, id=35}, result=blog, timeCost=52}
2021-07-19 00:51:19.777  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@59cdd10, timeCost=0}
2021-07-19 00:51:19.783  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@2c070ee}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=158, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=6}
2021-07-19 00:51:19.784  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=158, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=8}
2021-07-19 00:51:20.059  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=2}
2021-07-19 00:51:20.061  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=2}
2021-07-19 00:51:20.063  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=2}
2021-07-19 00:51:20.065  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=2}
2021-07-19 00:51:20.066  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=1}
2021-07-19 00:51:20.068  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=1}
2021-07-19 00:51:20.068  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=11}
2021-07-19 00:51:20.068  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.CommentController.comments', requestParams={model={comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, blogid=35}, result=blog :: commentList, timeCost=11}
2021-07-19 00:53:39.837  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectById', requestParams={id=35}, result=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=158, typeId=16, userId=1}, timeCost=4}
2021-07-19 00:53:39.847  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.updateById', requestParams={entity=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=159, typeId=16, userId=1}}, result=1, timeCost=5}
2021-07-19 00:53:39.864  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 00:53:39.865  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getBlogDetailDTOAndConvertToMarkdownById', requestParams={blogId=35}, result=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=159, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, timeCost=34}
2021-07-19 00:53:39.873  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=4}
2021-07-19 00:53:39.876  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=3}
2021-07-19 00:53:39.881  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=5}
2021-07-19 00:53:39.886  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=4}
2021-07-19 00:53:39.889  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=3}
2021-07-19 00:53:39.892  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=3}
2021-07-19 00:53:39.892  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=23}
2021-07-19 00:53:39.893  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.blog', requestParams={model={blog=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=159, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, id=35}, result=blog, timeCost=64}
2021-07-19 00:53:40.315  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@72d8a41c, timeCost=0}
2021-07-19 00:53:40.321  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@33d2eb3b}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=159, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=6}
2021-07-19 00:53:40.323  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=159, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=10}
2021-07-19 00:53:40.573  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=2}
2021-07-19 00:53:40.576  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=3}
2021-07-19 00:53:40.578  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=2}
2021-07-19 00:53:40.580  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=2}
2021-07-19 00:53:40.582  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=2}
2021-07-19 00:53:40.584  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=2}
2021-07-19 00:53:40.584  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=13}
2021-07-19 00:53:40.585  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.CommentController.comments', requestParams={model={comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, blogid=35}, result=blog :: commentList, timeCost=14}
2021-07-19 00:53:53.743  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectById', requestParams={id=35}, result=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=159, typeId=16, userId=1}, timeCost=2}
2021-07-19 00:53:53.748  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.updateById', requestParams={entity=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=160, typeId=16, userId=1}}, result=1, timeCost=3}
2021-07-19 00:53:53.752  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 00:53:53.752  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getBlogDetailDTOAndConvertToMarkdownById', requestParams={blogId=35}, result=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=160, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, timeCost=13}
2021-07-19 00:53:53.765  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=3}
2021-07-19 00:53:53.767  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=2}
2021-07-19 00:53:53.768  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=1}
2021-07-19 00:53:53.770  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=2}
2021-07-19 00:53:53.772  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=1}
2021-07-19 00:53:53.773  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=1}
2021-07-19 00:53:53.773  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=11}
2021-07-19 00:53:53.774  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.blog', requestParams={model={blog=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=160, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, id=35}, result=blog, timeCost=36}
2021-07-19 00:53:53.992  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@2140ae8e, timeCost=0}
2021-07-19 00:53:53.995  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@4a128b7e}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=160, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=3}
2021-07-19 00:53:53.998  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=160, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=8}
2021-07-19 00:53:54.162  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=2}
2021-07-19 00:53:54.164  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=1}
2021-07-19 00:53:54.166  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=2}
2021-07-19 00:53:54.168  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=2}
2021-07-19 00:53:54.170  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=2}
2021-07-19 00:53:54.172  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=2}
2021-07-19 00:53:54.172  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=12}
2021-07-19 00:53:54.172  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.CommentController.comments', requestParams={model={comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, blogid=35}, result=blog :: commentList, timeCost=12}
2021-07-19 00:55:13.086  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectById', requestParams={id=35}, result=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=160, typeId=16, userId=1}, timeCost=2}
2021-07-19 00:55:13.093  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.updateById', requestParams={entity=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}}, result=1, timeCost=3}
2021-07-19 00:55:13.098  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 00:55:13.098  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getBlogDetailDTOAndConvertToMarkdownById', requestParams={blogId=35}, result=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=161, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, timeCost=15}
2021-07-19 00:55:13.110  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=2}
2021-07-19 00:55:13.112  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=2}
2021-07-19 00:55:13.114  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=2}
2021-07-19 00:55:13.116  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=2}
2021-07-19 00:55:13.118  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=2}
2021-07-19 00:55:13.119  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=1}
2021-07-19 00:55:13.119  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=11}
2021-07-19 00:55:13.119  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.blog', requestParams={model={blog=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=161, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, id=35}, result=blog, timeCost=38}
2021-07-19 00:55:13.386  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@72411f6a, timeCost=0}
2021-07-19 00:55:13.392  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@5b1fcfdc}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=5}
2021-07-19 00:55:13.394  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=9}
2021-07-19 00:55:13.555  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=2}
2021-07-19 00:55:13.557  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=2}
2021-07-19 00:55:13.558  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=1}
2021-07-19 00:55:13.560  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=2}
2021-07-19 00:55:13.562  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=2}
2021-07-19 00:55:13.563  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=1}
2021-07-19 00:55:13.563  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=10}
2021-07-19 00:55:13.563  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.CommentController.comments', requestParams={model={comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, blogid=35}, result=blog :: commentList, timeCost=10}
2021-07-19 00:55:37.619  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/types/-1', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=2147483647}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=4}
2021-07-19 00:55:37.622  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/types/-1', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=2147483647}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=9}
2021-07-19 00:55:37.632  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/types/-1', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=16, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1af10d2c}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1af10d2c, timeCost=9}
2021-07-19 00:55:37.633  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/types/-1', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 00:55:37.635  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/types/-1', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=1}
2021-07-19 00:55:37.635  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/types/-1', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=16, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1af10d2c}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1af10d2c, timeCost=12}
2021-07-19 00:55:37.637  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/types/-1', httpMethodd='GET', classMethod='com.jasonc.blog.controller.TypeShowController.types', requestParams={model={types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1af10d2c, activeTypeId=16}, id=-1, pageNum=1}, result=types, timeCost=24}
2021-07-19 00:55:37.947  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@6f97adb9, timeCost=0}
2021-07-19 00:55:37.951  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@76ee7276}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=4}
2021-07-19 00:55:37.953  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=7}
2021-07-19 00:55:45.794  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/tags/-1', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=2147483647}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=3}
2021-07-19 00:55:45.796  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/tags/-1', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=2147483647}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=7}
2021-07-19 00:55:45.806  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/tags/-1', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='8'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@6c3a0d58}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@6c3a0d58, timeCost=9}
2021-07-19 00:55:45.807  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/tags/-1', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 00:55:45.807  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/tags/-1', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='8'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@6c3a0d58}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@6c3a0d58, timeCost=10}
2021-07-19 00:55:45.808  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/tags/-1', httpMethodd='GET', classMethod='com.jasonc.blog.controller.TagShowController.tags', requestParams={model={tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@6c3a0d58, activeTagId=8}, id=-1, pageNum=1}, result=tags, timeCost=19}
2021-07-19 00:55:46.061  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=4}
2021-07-19 00:55:52.237  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/archives', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectCount', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper@19626bd1}, result=4, timeCost=5}
2021-07-19 00:55:52.238  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/archives', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.count', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper@19626bd1}, result=4, timeCost=6}
2021-07-19 00:55:52.240  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/archives', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getGroupYear', requestParams={}, result=[2021], timeCost=2}
2021-07-19 00:55:52.244  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/archives', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getBlogQueryPerYear', requestParams={year=2021}, result=[BlogQueryDTO{id=35, title='java中的list为空（size==0）与list为null的区别', updateTime=Thu Mar 18 22:34:35 CST 2021, recommend=false, typeId=null, published=false, flag='转载', typeName='null'}, BlogQueryDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别', updateTime=Thu Mar 18 00:12:47 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}, BlogQueryDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案', updateTime=Wed Mar 17 12:26:32 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}, BlogQueryDTO{id=51, title='commonmark使用方法', updateTime=Fri Mar 12 18:31:22 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}], timeCost=3}
2021-07-19 00:55:52.247  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/archives', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getArchiveBlogDTOList', requestParams={}, result=[ArchiveBlog{year='2021', blogQueryDTOList=[BlogQueryDTO{id=35, title='java中的list为空（size==0）与list为null的区别', updateTime=Thu Mar 18 22:34:35 CST 2021, recommend=false, typeId=null, published=false, flag='转载', typeName='null'}, BlogQueryDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别', updateTime=Thu Mar 18 00:12:47 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}, BlogQueryDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案', updateTime=Wed Mar 17 12:26:32 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}, BlogQueryDTO{id=51, title='commonmark使用方法', updateTime=Fri Mar 12 18:31:22 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}]}], timeCost=9}
2021-07-19 00:55:52.249  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/archives', httpMethodd='GET', classMethod='com.jasonc.blog.controller.ArchiveShowController.archive', requestParams={model={archiveBlogList=[ArchiveBlog{year='2021', blogQueryDTOList=[BlogQueryDTO{id=35, title='java中的list为空（size==0）与list为null的区别', updateTime=Thu Mar 18 22:34:35 CST 2021, recommend=false, typeId=null, published=false, flag='转载', typeName='null'}, BlogQueryDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别', updateTime=Thu Mar 18 00:12:47 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}, BlogQueryDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案', updateTime=Wed Mar 17 12:26:32 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}, BlogQueryDTO{id=51, title='commonmark使用方法', updateTime=Fri Mar 12 18:31:22 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}]}], blogCount=4}}, result=archives, timeCost=17}
2021-07-19 00:55:52.475  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@6b92cc52, timeCost=0}
2021-07-19 00:55:52.480  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@5726aa9e}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=5}
2021-07-19 00:55:52.482  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=8}
2021-07-19 00:56:01.289  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/about', httpMethodd='GET', classMethod='com.jasonc.blog.controller.AboutShowController.about', requestParams={}, result=about, timeCost=0}
2021-07-19 00:56:01.508  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=2}
2021-07-19 00:56:44.064  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/archives', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectCount', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper@16d26685}, result=4, timeCost=6}
2021-07-19 00:56:44.064  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/archives', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.count', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper@16d26685}, result=4, timeCost=6}
2021-07-19 00:56:44.067  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/archives', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getGroupYear', requestParams={}, result=[2021], timeCost=2}
2021-07-19 00:56:44.070  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/archives', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getBlogQueryPerYear', requestParams={year=2021}, result=[BlogQueryDTO{id=35, title='java中的list为空（size==0）与list为null的区别', updateTime=Thu Mar 18 22:34:35 CST 2021, recommend=false, typeId=null, published=false, flag='转载', typeName='null'}, BlogQueryDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别', updateTime=Thu Mar 18 00:12:47 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}, BlogQueryDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案', updateTime=Wed Mar 17 12:26:32 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}, BlogQueryDTO{id=51, title='commonmark使用方法', updateTime=Fri Mar 12 18:31:22 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}], timeCost=2}
2021-07-19 00:56:44.072  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/archives', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getArchiveBlogDTOList', requestParams={}, result=[ArchiveBlog{year='2021', blogQueryDTOList=[BlogQueryDTO{id=35, title='java中的list为空（size==0）与list为null的区别', updateTime=Thu Mar 18 22:34:35 CST 2021, recommend=false, typeId=null, published=false, flag='转载', typeName='null'}, BlogQueryDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别', updateTime=Thu Mar 18 00:12:47 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}, BlogQueryDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案', updateTime=Wed Mar 17 12:26:32 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}, BlogQueryDTO{id=51, title='commonmark使用方法', updateTime=Fri Mar 12 18:31:22 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}]}], timeCost=7}
2021-07-19 00:56:44.073  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/archives', httpMethodd='GET', classMethod='com.jasonc.blog.controller.ArchiveShowController.archive', requestParams={model={archiveBlogList=[ArchiveBlog{year='2021', blogQueryDTOList=[BlogQueryDTO{id=35, title='java中的list为空（size==0）与list为null的区别', updateTime=Thu Mar 18 22:34:35 CST 2021, recommend=false, typeId=null, published=false, flag='转载', typeName='null'}, BlogQueryDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别', updateTime=Thu Mar 18 00:12:47 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}, BlogQueryDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案', updateTime=Wed Mar 17 12:26:32 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}, BlogQueryDTO{id=51, title='commonmark使用方法', updateTime=Fri Mar 12 18:31:22 CST 2021, recommend=false, typeId=null, published=false, flag='原创', typeName='null'}]}], blogCount=4}}, result=archives, timeCost=15}
2021-07-19 00:56:44.321  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@6b2642c0, timeCost=0}
2021-07-19 00:56:44.325  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@4a7d1c76}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=4}
2021-07-19 00:56:44.326  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=6}
2021-07-19 00:57:10.857  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin', httpMethodd='GET', classMethod='com.jasonc.blog.controller.admin.LoginController.admin', requestParams={}, result=admin/login, timeCost=0}
2021-07-19 00:57:44.827  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.realm.UserRealm          : message : 进行认证
2021-07-19 00:57:44.832  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.realm.UserRealm          : message : 结束认证
2021-07-19 00:57:44.838 ERROR 12952 --- [http-nio-8080-exec-1] c.j.b.controller.admin.LoginController   : message : 密码错误, Exception : Submitted credentials for token [org.apache.shiro.authc.UsernamePasswordToken - admin, rememberMe=false] did not match the expected credentials.
2021-07-19 00:57:44.838  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/login', httpMethodd='POST', classMethod='com.jasonc.blog.controller.admin.LoginController.login', requestParams={httpSession=org.apache.catalina.session.StandardSessionFacade@79944efc, password=19960223.CHEN>, redirectAttributes={}, username=admin}, result=redirect:/admin, timeCost=11}
2021-07-19 00:57:44.842  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin', httpMethodd='GET', classMethod='com.jasonc.blog.controller.admin.LoginController.admin', requestParams={}, result=admin/login, timeCost=0}
2021-07-19 00:57:56.724  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.realm.UserRealm          : message : 进行认证
2021-07-19 00:57:56.728  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.realm.UserRealm          : message : 结束认证
2021-07-19 00:57:56.729  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/login', httpMethodd='POST', classMethod='com.jasonc.blog.controller.admin.LoginController.login', requestParams={httpSession=org.apache.catalina.session.StandardSessionFacade@79944efc, password=19650223.CHEN>, redirectAttributes={}, username=admin}, result=admin/index, timeCost=5}
2021-07-19 00:57:56.953  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@1e65e781, timeCost=0}
2021-07-19 00:57:56.956  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@1d24b434}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=3}
2021-07-19 00:57:56.958  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=7}
2021-07-19 00:58:08.416  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.realm.UserRealm          : message : 开始授权 
2021-07-19 00:58:08.417  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.realm.UserRealm          : message : 授权完毕
2021-07-19 00:58:08.490  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/blogs', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getBlogQueryPage', requestParams={blogQueryPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5733a34b}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5733a34b, timeCost=71}
2021-07-19 00:58:08.490  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/blogs', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getBlogPage', requestParams={blogIpage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5733a34b}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5733a34b, timeCost=71}
2021-07-19 00:58:08.495  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/blogs', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=null}, result=[Type{id=15, name=计算机基础}, Type{id=16, name=java基础}, Type{id=17, name=Maven}, Type{id=18, name=数据库}], timeCost=3}
2021-07-19 00:58:08.496  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/blogs', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getAllType', requestParams={}, result=[Type{id=15, name=计算机基础}, Type{id=16, name=java基础}, Type{id=17, name=Maven}, Type{id=18, name=数据库}], timeCost=5}
2021-07-19 00:58:08.499  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/blogs', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=null}, result=[Tag{id=8, name=List集合}, Tag{id=9, name=踩坑}, Tag{id=10, name=SpringBoot常用依赖}, Tag{id=11, name=MySQL}, Tag{id=13, name=其他}], timeCost=1}
2021-07-19 00:58:08.501  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/blogs', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getAllTag', requestParams={}, result=[Tag{id=8, name=List集合}, Tag{id=9, name=踩坑}, Tag{id=10, name=SpringBoot常用依赖}, Tag{id=11, name=MySQL}, Tag{id=13, name=其他}], timeCost=5}
2021-07-19 00:58:08.501  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/blogs', httpMethodd='GET', classMethod='com.jasonc.blog.controller.admin.BlogController.listBLog', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5733a34b, pageNum=1, tags=[Tag{id=8, name=List集合}, Tag{id=9, name=踩坑}, Tag{id=10, name=SpringBoot常用依赖}, Tag{id=11, name=MySQL}, Tag{id=13, name=其他}], types=[Type{id=15, name=计算机基础}, Type{id=16, name=java基础}, Type{id=17, name=Maven}, Type{id=18, name=数据库}]}, pageNum=1}, result=admin/blogs, timeCost=84}
2021-07-19 00:58:08.729  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@b7f62de, timeCost=0}
2021-07-19 00:58:08.742  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@4085f5b9}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=12}
2021-07-19 00:58:08.744  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=16}
2021-07-19 00:58:29.207  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.realm.UserRealm          : message : 开始授权 
2021-07-19 00:58:29.207  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.realm.UserRealm          : message : 授权完毕
2021-07-19 00:58:29.287  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/types', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectPage', requestParams={queryWrapper=null, page=com.baomidou.mybatisplus.extension.plugins.pagination.Page@7c2cb48}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@7c2cb48, timeCost=79}
2021-07-19 00:58:29.287  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/types', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTypePage', requestParams={typeIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@7c2cb48}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@7c2cb48, timeCost=79}
2021-07-19 00:58:29.287  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/types', httpMethodd='GET', classMethod='com.jasonc.blog.controller.admin.TypeController.typeList', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@7c2cb48}, pageNum=1}, result=admin/types, timeCost=79}
2021-07-19 00:58:29.533  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@6b6c8b6f, timeCost=0}
2021-07-19 00:58:29.536  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@7d5b97b9}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=3}
2021-07-19 00:58:29.538  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=7}
2021-07-19 00:58:34.659  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.realm.UserRealm          : message : 开始授权 
2021-07-19 00:58:34.659  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.realm.UserRealm          : message : 授权完毕
2021-07-19 00:58:34.730  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/tags', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectPage', requestParams={queryWrapper=null, page=com.baomidou.mybatisplus.extension.plugins.pagination.Page@cf8cca7}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@cf8cca7, timeCost=70}
2021-07-19 00:58:34.730  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/tags', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTagPage', requestParams={tagIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@cf8cca7}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@cf8cca7, timeCost=70}
2021-07-19 00:58:34.730  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/tags', httpMethodd='GET', classMethod='com.jasonc.blog.controller.admin.TagController.tagList', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@cf8cca7}, pageNum=1}, result=admin/tags, timeCost=70}
2021-07-19 00:58:34.981  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=3}
2021-07-19 00:58:38.462  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.realm.UserRealm          : message : 开始授权 
2021-07-19 00:58:38.462  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.realm.UserRealm          : message : 授权完毕
2021-07-19 00:58:38.463  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/tags/input', httpMethodd='GET', classMethod='com.jasonc.blog.controller.admin.TagController.toAddTag', requestParams={model={}}, result=admin/tags-input, timeCost=0}
2021-07-19 00:58:38.697  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=1}
2021-07-19 00:58:42.596  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.realm.UserRealm          : message : 开始授权 
2021-07-19 00:58:42.596  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.realm.UserRealm          : message : 授权完毕
2021-07-19 00:58:42.672  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/blogs', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getBlogQueryPage', requestParams={blogQueryPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5cc025c2}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5cc025c2, timeCost=75}
2021-07-19 00:58:42.673  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/blogs', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getBlogPage', requestParams={blogIpage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5cc025c2}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5cc025c2, timeCost=76}
2021-07-19 00:58:42.678  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/blogs', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=null}, result=[Type{id=15, name=计算机基础}, Type{id=16, name=java基础}, Type{id=17, name=Maven}, Type{id=18, name=数据库}], timeCost=2}
2021-07-19 00:58:42.679  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/blogs', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getAllType', requestParams={}, result=[Type{id=15, name=计算机基础}, Type{id=16, name=java基础}, Type{id=17, name=Maven}, Type{id=18, name=数据库}], timeCost=4}
2021-07-19 00:58:42.682  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/blogs', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=null}, result=[Tag{id=8, name=List集合}, Tag{id=9, name=踩坑}, Tag{id=10, name=SpringBoot常用依赖}, Tag{id=11, name=MySQL}, Tag{id=13, name=其他}], timeCost=2}
2021-07-19 00:58:42.685  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/blogs', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getAllTag', requestParams={}, result=[Tag{id=8, name=List集合}, Tag{id=9, name=踩坑}, Tag{id=10, name=SpringBoot常用依赖}, Tag{id=11, name=MySQL}, Tag{id=13, name=其他}], timeCost=6}
2021-07-19 00:58:42.685  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/blogs', httpMethodd='GET', classMethod='com.jasonc.blog.controller.admin.BlogController.listBLog', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5cc025c2, pageNum=1, tags=[Tag{id=8, name=List集合}, Tag{id=9, name=踩坑}, Tag{id=10, name=SpringBoot常用依赖}, Tag{id=11, name=MySQL}, Tag{id=13, name=其他}], types=[Type{id=15, name=计算机基础}, Type{id=16, name=java基础}, Type{id=17, name=Maven}, Type{id=18, name=数据库}]}, pageNum=1}, result=admin/blogs, timeCost=89}
2021-07-19 00:58:42.911  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@10999a4c, timeCost=0}
2021-07-19 00:58:42.914  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@6d4a9700}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=3}
2021-07-19 00:58:42.916  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=6}
2021-07-19 00:58:47.202  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin/logout', httpMethodd='GET', classMethod='com.jasonc.blog.controller.admin.LoginController.logout', requestParams={httpSession=org.apache.catalina.session.StandardSessionFacade@79944efc}, result=redirect:/admin, timeCost=1}
2021-07-19 00:58:47.206  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin', httpMethodd='GET', classMethod='com.jasonc.blog.controller.admin.LoginController.admin', requestParams={}, result=admin/login, timeCost=0}
2021-07-19 00:58:53.274  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5e6ca566}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5e6ca566, timeCost=10}
2021-07-19 00:58:53.276  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 00:58:53.277  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=1}
2021-07-19 00:58:53.278  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=1}
2021-07-19 00:58:53.280  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 00:58:53.280  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5e6ca566}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5e6ca566, timeCost=16}
2021-07-19 00:58:53.284  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 00:58:53.285  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=4}
2021-07-19 00:58:53.289  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=2}
2021-07-19 00:58:53.290  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=5}
2021-07-19 00:58:53.294  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=2}
2021-07-19 00:58:53.296  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=5}
2021-07-19 00:58:53.297  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5e6ca566, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=34}
2021-07-19 00:58:53.528  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@752cc491, timeCost=1}
2021-07-19 00:58:53.531  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@229fb878}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=3}
2021-07-19 00:58:53.533  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=7}
2021-07-19 01:03:44.725  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@44111f51}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@44111f51, timeCost=8}
2021-07-19 01:03:44.727  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:03:44.729  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:03:44.730  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=1}
2021-07-19 01:03:44.731  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 01:03:44.732  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@44111f51}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@44111f51, timeCost=15}
2021-07-19 01:03:44.736  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:03:44.738  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=5}
2021-07-19 01:03:44.741  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=2}
2021-07-19 01:03:44.743  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=4}
2021-07-19 01:03:44.746  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=1}
2021-07-19 01:03:44.748  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=5}
2021-07-19 01:03:44.749  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@44111f51, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=34}
2021-07-19 01:03:44.996  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@10a55388, timeCost=0}
2021-07-19 01:03:44.999  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@16401547}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=3}
2021-07-19 01:03:45.001  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=6}
2021-07-19 01:03:54.327  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@31e9c363}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@31e9c363, timeCost=9}
2021-07-19 01:03:54.328  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 01:03:54.331  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:03:54.333  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=2}
2021-07-19 01:03:54.334  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 01:03:54.334  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@31e9c363}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@31e9c363, timeCost=17}
2021-07-19 01:03:54.337  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:03:54.339  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=2}
2021-07-19 01:03:54.342  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=2}
2021-07-19 01:03:54.343  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@31e9c363, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=27}
2021-07-19 01:03:54.704  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=1}
2021-07-19 01:04:05.666  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@487fb425}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@487fb425, timeCost=8}
2021-07-19 01:04:05.668  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:04:05.669  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=1}
2021-07-19 01:04:05.671  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=1}
2021-07-19 01:04:05.673  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=2}
2021-07-19 01:04:05.673  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@487fb425}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@487fb425, timeCost=15}
2021-07-19 01:04:05.677  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:04:05.678  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=4}
2021-07-19 01:04:05.682  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=2}
2021-07-19 01:04:05.683  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=4}
2021-07-19 01:04:05.687  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=1}
2021-07-19 01:04:05.689  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=4}
2021-07-19 01:04:05.690  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@487fb425, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=34}
2021-07-19 01:04:05.949  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@73dd9a60, timeCost=0}
2021-07-19 01:04:05.952  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@4b721c67}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=3}
2021-07-19 01:04:05.954  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=6}
2021-07-19 01:05:49.864  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='192.168.43.1', url='http://192.168.43.240:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1d62f087}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1d62f087, timeCost=9}
2021-07-19 01:05:49.865  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='192.168.43.1', url='http://192.168.43.240:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 01:05:49.866  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='192.168.43.1', url='http://192.168.43.240:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=1}
2021-07-19 01:05:49.867  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='192.168.43.1', url='http://192.168.43.240:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=1}
2021-07-19 01:05:49.869  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='192.168.43.1', url='http://192.168.43.240:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 01:05:49.869  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='192.168.43.1', url='http://192.168.43.240:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1d62f087}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1d62f087, timeCost=14}
2021-07-19 01:05:49.873  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='192.168.43.1', url='http://192.168.43.240:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:05:49.874  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='192.168.43.1', url='http://192.168.43.240:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=4}
2021-07-19 01:05:49.877  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='192.168.43.1', url='http://192.168.43.240:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=1}
2021-07-19 01:05:49.879  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='192.168.43.1', url='http://192.168.43.240:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=5}
2021-07-19 01:05:49.883  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='192.168.43.1', url='http://192.168.43.240:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=2}
2021-07-19 01:05:49.884  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='192.168.43.1', url='http://192.168.43.240:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=5}
2021-07-19 01:05:49.885  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='192.168.43.1', url='http://192.168.43.240:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1d62f087, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=31}
2021-07-19 01:05:53.804  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='192.168.43.1', url='http://192.168.43.240:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@1371c9b9, timeCost=0}
2021-07-19 01:05:53.808  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='192.168.43.1', url='http://192.168.43.240:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@747b781c}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=3}
2021-07-19 01:05:53.809  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='192.168.43.1', url='http://192.168.43.240:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=6}
2021-07-19 01:14:49.078  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5e7bb535}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5e7bb535, timeCost=18}
2021-07-19 01:14:49.081  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=3}
2021-07-19 01:14:49.084  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:14:49.087  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=3}
2021-07-19 01:14:49.090  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=3}
2021-07-19 01:14:49.090  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5e7bb535}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5e7bb535, timeCost=30}
2021-07-19 01:14:49.101  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=5}
2021-07-19 01:14:49.103  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=11}
2021-07-19 01:14:49.109  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=4}
2021-07-19 01:14:49.111  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=8}
2021-07-19 01:14:49.117  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=3}
2021-07-19 01:14:49.120  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=8}
2021-07-19 01:14:49.122  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5e7bb535, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=65}
2021-07-19 01:14:49.821  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@6f6b6238, timeCost=0}
2021-07-19 01:14:49.829  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@ac8e3bf}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=7}
2021-07-19 01:14:49.833  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=14}
2021-07-19 01:15:03.331  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3cd2b69f}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3cd2b69f, timeCost=9}
2021-07-19 01:15:03.332  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 01:15:03.333  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=1}
2021-07-19 01:15:03.335  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=2}
2021-07-19 01:15:03.336  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 01:15:03.336  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3cd2b69f}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3cd2b69f, timeCost=14}
2021-07-19 01:15:03.340  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:15:03.341  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=4}
2021-07-19 01:15:03.344  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=1}
2021-07-19 01:15:03.346  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=4}
2021-07-19 01:15:03.350  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=2}
2021-07-19 01:15:03.351  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=4}
2021-07-19 01:15:03.353  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3cd2b69f, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=32}
2021-07-19 01:15:03.619  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@1a7b07d4, timeCost=0}
2021-07-19 01:15:03.622  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@633f3df6}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=3}
2021-07-19 01:15:03.623  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=5}
2021-07-19 01:15:44.074  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4d905106}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4d905106, timeCost=14}
2021-07-19 01:15:44.076  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:15:44.079  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:15:44.082  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=3}
2021-07-19 01:15:44.085  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=3}
2021-07-19 01:15:44.085  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4d905106}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4d905106, timeCost=25}
2021-07-19 01:15:44.092  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=3}
2021-07-19 01:15:44.094  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=7}
2021-07-19 01:15:44.099  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=3}
2021-07-19 01:15:44.102  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=8}
2021-07-19 01:15:44.108  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=3}
2021-07-19 01:15:44.110  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=7}
2021-07-19 01:15:44.113  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4d905106, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=55}
2021-07-19 01:15:44.686  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@547012c8, timeCost=0}
2021-07-19 01:15:44.694  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@315ff585}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=7}
2021-07-19 01:15:44.697  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=13}
2021-07-19 01:17:47.856  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@58604886}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@58604886, timeCost=8}
2021-07-19 01:17:47.858  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 01:17:47.859  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=1}
2021-07-19 01:17:47.861  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=1}
2021-07-19 01:17:47.862  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 01:17:47.862  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@58604886}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@58604886, timeCost=14}
2021-07-19 01:17:47.866  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:17:47.868  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=5}
2021-07-19 01:17:47.871  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=2}
2021-07-19 01:17:47.872  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=4}
2021-07-19 01:17:47.876  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=2}
2021-07-19 01:17:47.877  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=4}
2021-07-19 01:17:47.878  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@58604886, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=31}
2021-07-19 01:17:48.131  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@680e6c7c, timeCost=0}
2021-07-19 01:17:48.134  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@29a5b99e}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=3}
2021-07-19 01:17:48.136  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=6}
2021-07-19 01:22:04.116  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3e93d4e2}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3e93d4e2, timeCost=9}
2021-07-19 01:22:04.117  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 01:22:04.118  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=1}
2021-07-19 01:22:04.120  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=2}
2021-07-19 01:22:04.121  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 01:22:04.121  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3e93d4e2}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3e93d4e2, timeCost=14}
2021-07-19 01:22:04.125  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:22:04.126  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=4}
2021-07-19 01:22:04.129  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=1}
2021-07-19 01:22:04.131  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=4}
2021-07-19 01:22:04.134  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=1}
2021-07-19 01:22:04.136  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=5}
2021-07-19 01:22:04.137  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3e93d4e2, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=31}
2021-07-19 01:22:04.414  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@1b492ef3, timeCost=0}
2021-07-19 01:22:04.418  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@4b62ee95}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=4}
2021-07-19 01:22:04.420  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=7}
2021-07-19 01:22:12.753  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@2ed58d52}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@2ed58d52, timeCost=8}
2021-07-19 01:22:12.754  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 01:22:12.755  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=1}
2021-07-19 01:22:12.756  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=1}
2021-07-19 01:22:12.758  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=2}
2021-07-19 01:22:12.758  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@2ed58d52}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@2ed58d52, timeCost=13}
2021-07-19 01:22:12.761  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:22:12.762  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=1}
2021-07-19 01:22:12.764  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=1}
2021-07-19 01:22:12.765  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@2ed58d52, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=21}
2021-07-19 01:22:13.016  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=2}
2021-07-19 01:22:26.773  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@46a08064}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@46a08064, timeCost=10}
2021-07-19 01:22:26.774  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 01:22:26.776  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=1}
2021-07-19 01:22:26.778  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=2}
2021-07-19 01:22:26.779  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 01:22:26.779  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@46a08064}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@46a08064, timeCost=16}
2021-07-19 01:22:26.784  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:22:26.785  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=5}
2021-07-19 01:22:26.788  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=2}
2021-07-19 01:22:26.789  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=4}
2021-07-19 01:22:26.794  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=2}
2021-07-19 01:22:26.796  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=5}
2021-07-19 01:22:26.798  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@46a08064, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=37}
2021-07-19 01:22:27.159  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@1800c550, timeCost=0}
2021-07-19 01:22:27.162  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@31009f0c}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=3}
2021-07-19 01:22:27.164  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=6}
2021-07-19 01:23:30.232  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4fd18dc4}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4fd18dc4, timeCost=8}
2021-07-19 01:23:30.233  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 01:23:30.234  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=1}
2021-07-19 01:23:30.236  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=1}
2021-07-19 01:23:30.238  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=2}
2021-07-19 01:23:30.238  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4fd18dc4}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4fd18dc4, timeCost=14}
2021-07-19 01:23:30.242  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:23:30.243  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=4}
2021-07-19 01:23:30.247  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=2}
2021-07-19 01:23:30.248  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=4}
2021-07-19 01:23:30.252  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=2}
2021-07-19 01:23:30.253  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=4}
2021-07-19 01:23:30.254  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4fd18dc4, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=31}
2021-07-19 01:23:30.493  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@210bdbd3, timeCost=0}
2021-07-19 01:23:30.496  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@7557b98e}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=2}
2021-07-19 01:23:30.498  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=6}
2021-07-19 01:23:58.600  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1744f62d}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1744f62d, timeCost=11}
2021-07-19 01:23:58.602  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:23:58.604  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:23:58.606  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=2}
2021-07-19 01:23:58.607  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 01:23:58.607  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1744f62d}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1744f62d, timeCost=19}
2021-07-19 01:23:58.612  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:23:58.614  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=5}
2021-07-19 01:23:58.617  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=2}
2021-07-19 01:23:58.619  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=5}
2021-07-19 01:23:58.623  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=2}
2021-07-19 01:23:58.625  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=5}
2021-07-19 01:23:58.626  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1744f62d, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=40}
2021-07-19 01:23:59.024  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@42e7f97e, timeCost=0}
2021-07-19 01:23:59.029  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@4b995d9e}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=4}
2021-07-19 01:23:59.031  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=8}
2021-07-19 01:24:10.499  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@678263f1}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@678263f1, timeCost=9}
2021-07-19 01:24:10.501  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:24:10.502  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=1}
2021-07-19 01:24:10.504  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=2}
2021-07-19 01:24:10.505  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 01:24:10.505  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@678263f1}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@678263f1, timeCost=15}
2021-07-19 01:24:10.510  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:24:10.511  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=4}
2021-07-19 01:24:10.514  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=1}
2021-07-19 01:24:10.516  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=5}
2021-07-19 01:24:10.520  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=2}
2021-07-19 01:24:10.522  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=5}
2021-07-19 01:24:10.524  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@678263f1, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=35}
2021-07-19 01:24:10.798  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@768c6c02, timeCost=0}
2021-07-19 01:24:10.801  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@4e600ce}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=3}
2021-07-19 01:24:10.803  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=6}
2021-07-19 01:24:35.268  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4516012c}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4516012c, timeCost=8}
2021-07-19 01:24:35.270  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:24:35.272  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:24:35.273  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=1}
2021-07-19 01:24:35.275  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=2}
2021-07-19 01:24:35.275  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4516012c}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4516012c, timeCost=15}
2021-07-19 01:24:35.281  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:24:35.283  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=6}
2021-07-19 01:24:35.287  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=2}
2021-07-19 01:24:35.288  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=5}
2021-07-19 01:24:35.293  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=2}
2021-07-19 01:24:35.295  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=5}
2021-07-19 01:24:35.297  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4516012c, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=39}
2021-07-19 01:24:35.559  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@7e431c48, timeCost=0}
2021-07-19 01:24:35.563  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@56ff5007}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=4}
2021-07-19 01:24:35.565  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=8}
2021-07-19 01:25:18.421  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@35445ec2}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@35445ec2, timeCost=11}
2021-07-19 01:25:18.423  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:25:18.425  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:25:18.426  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=1}
2021-07-19 01:25:18.428  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=2}
2021-07-19 01:25:18.429  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@35445ec2}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@35445ec2, timeCost=19}
2021-07-19 01:25:18.436  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=3}
2021-07-19 01:25:18.437  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=6}
2021-07-19 01:25:18.440  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=2}
2021-07-19 01:25:18.441  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=4}
2021-07-19 01:25:18.445  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=1}
2021-07-19 01:25:18.447  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=5}
2021-07-19 01:25:18.448  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@35445ec2, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=40}
2021-07-19 01:25:18.745  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@46fb4cdf, timeCost=0}
2021-07-19 01:25:18.749  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@1870e4b}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=4}
2021-07-19 01:25:18.751  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=8}
2021-07-19 01:32:15.741  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@58827b5c}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@58827b5c, timeCost=9}
2021-07-19 01:32:15.742  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 01:32:15.744  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:32:15.745  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=1}
2021-07-19 01:32:15.746  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 01:32:15.746  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@58827b5c}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@58827b5c, timeCost=14}
2021-07-19 01:32:15.760  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:32:15.761  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=5}
2021-07-19 01:32:15.764  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=1}
2021-07-19 01:32:15.765  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=4}
2021-07-19 01:32:15.768  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=1}
2021-07-19 01:32:15.770  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=4}
2021-07-19 01:32:15.771  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@58827b5c, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=41}
2021-07-19 01:32:16.140  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@6372b8e4, timeCost=0}
2021-07-19 01:32:16.145  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@790c2638}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=5}
2021-07-19 01:32:16.146  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=7}
2021-07-19 01:32:51.945  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3341a0b3}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3341a0b3, timeCost=9}
2021-07-19 01:32:51.948  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:32:51.951  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=3}
2021-07-19 01:32:51.954  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=3}
2021-07-19 01:32:51.957  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=3}
2021-07-19 01:32:51.957  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3341a0b3}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3341a0b3, timeCost=21}
2021-07-19 01:32:51.964  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=3}
2021-07-19 01:32:51.967  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=8}
2021-07-19 01:32:51.972  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=3}
2021-07-19 01:32:51.974  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=6}
2021-07-19 01:32:51.979  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=2}
2021-07-19 01:32:51.983  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=8}
2021-07-19 01:32:51.999  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3341a0b3, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=65}
2021-07-19 01:32:52.307  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@6dc88333, timeCost=0}
2021-07-19 01:32:52.311  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@4f1b008c}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=4}
2021-07-19 01:32:52.312  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=6}
2021-07-19 01:33:04.030  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/admin', httpMethodd='GET', classMethod='com.jasonc.blog.controller.admin.LoginController.admin', requestParams={}, result=admin/login, timeCost=0}
2021-07-19 01:33:16.932  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@6b8789f8}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@6b8789f8, timeCost=8}
2021-07-19 01:33:16.934  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:33:16.936  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:33:16.937  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=1}
2021-07-19 01:33:16.938  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 01:33:16.938  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@6b8789f8}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@6b8789f8, timeCost=14}
2021-07-19 01:33:16.942  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:33:16.943  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=4}
2021-07-19 01:33:16.945  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=1}
2021-07-19 01:33:16.946  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=3}
2021-07-19 01:33:16.950  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=2}
2021-07-19 01:33:16.951  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=4}
2021-07-19 01:33:16.952  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@6b8789f8, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=30}
2021-07-19 01:33:17.184  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@e1f8c03, timeCost=0}
2021-07-19 01:33:17.186  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@303ceb18}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=2}
2021-07-19 01:33:17.188  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=6}
2021-07-19 01:37:21.589  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/types/-1', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=2147483647}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=3}
2021-07-19 01:37:21.591  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/types/-1', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=2147483647}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=7}
2021-07-19 01:37:21.600  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/types/-1', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=16, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@dba0b16}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@dba0b16, timeCost=8}
2021-07-19 01:37:21.601  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/types/-1', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 01:37:21.603  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/types/-1', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:37:21.603  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/types/-1', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=16, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@dba0b16}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@dba0b16, timeCost=11}
2021-07-19 01:37:21.603  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/types/-1', httpMethodd='GET', classMethod='com.jasonc.blog.controller.TypeShowController.types', requestParams={model={types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@dba0b16, activeTypeId=16}, id=-1, pageNum=1}, result=types, timeCost=19}
2021-07-19 01:37:21.849  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@1e5ba6a5, timeCost=0}
2021-07-19 01:37:21.852  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@a4acdc9}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=3}
2021-07-19 01:37:21.854  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=6}
2021-07-19 01:37:26.938  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectById', requestParams={id=35}, result=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, timeCost=2}
2021-07-19 01:37:26.944  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.updateById', requestParams={entity=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}}, result=1, timeCost=3}
2021-07-19 01:37:26.948  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 01:37:26.948  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getBlogDetailDTOAndConvertToMarkdownById', requestParams={blogId=35}, result=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=162, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, timeCost=13}
2021-07-19 01:37:26.953  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=2}
2021-07-19 01:37:26.955  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=2}
2021-07-19 01:37:26.956  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=1}
2021-07-19 01:37:26.957  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=1}
2021-07-19 01:37:26.959  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=2}
2021-07-19 01:37:26.960  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=1}
2021-07-19 01:37:26.960  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=9}
2021-07-19 01:37:26.960  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.blog', requestParams={model={blog=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=162, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, id=35}, result=blog, timeCost=26}
2021-07-19 01:37:27.227  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=161, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=2}
2021-07-19 01:37:27.507  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=2}
2021-07-19 01:37:27.509  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=2}
2021-07-19 01:37:27.510  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=1}
2021-07-19 01:37:27.511  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=1}
2021-07-19 01:37:27.512  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=1}
2021-07-19 01:37:27.514  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=1}
2021-07-19 01:37:27.514  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=9}
2021-07-19 01:37:27.514  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.CommentController.comments', requestParams={model={comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, blogid=35}, result=blog :: commentList, timeCost=9}
2021-07-19 01:42:44.695  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@596f37a0}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@596f37a0, timeCost=15}
2021-07-19 01:42:44.698  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=3}
2021-07-19 01:42:44.700  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:42:44.702  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=2}
2021-07-19 01:42:44.705  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=3}
2021-07-19 01:42:44.705  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@596f37a0}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@596f37a0, timeCost=25}
2021-07-19 01:42:44.711  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=3}
2021-07-19 01:42:44.713  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=6}
2021-07-19 01:42:44.717  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=2}
2021-07-19 01:42:44.720  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=7}
2021-07-19 01:42:44.725  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=2}
2021-07-19 01:42:44.727  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=6}
2021-07-19 01:42:44.729  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@596f37a0, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=51}
2021-07-19 01:42:45.175  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@2867288, timeCost=0}
2021-07-19 01:42:45.179  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@4ec92b8c}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=4}
2021-07-19 01:42:45.181  INFO 12952 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=8}
2021-07-19 01:42:51.736  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@44d10b41}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@44d10b41, timeCost=8}
2021-07-19 01:42:51.738  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:42:51.739  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=1}
2021-07-19 01:42:51.741  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=2}
2021-07-19 01:42:51.742  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 01:42:51.742  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@44d10b41}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@44d10b41, timeCost=14}
2021-07-19 01:42:51.744  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=1}
2021-07-19 01:42:51.746  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=2}
2021-07-19 01:42:51.748  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=1}
2021-07-19 01:42:51.749  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@44d10b41, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=23}
2021-07-19 01:42:51.994  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=2}
2021-07-19 01:43:17.865  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@36d51bc9}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@36d51bc9, timeCost=8}
2021-07-19 01:43:17.866  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 01:43:17.867  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=1}
2021-07-19 01:43:17.868  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=1}
2021-07-19 01:43:17.869  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 01:43:17.869  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@36d51bc9}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@36d51bc9, timeCost=12}
2021-07-19 01:43:17.872  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=1}
2021-07-19 01:43:17.874  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=4}
2021-07-19 01:43:17.876  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=1}
2021-07-19 01:43:17.878  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=4}
2021-07-19 01:43:17.880  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=1}
2021-07-19 01:43:17.881  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=3}
2021-07-19 01:43:17.882  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@36d51bc9, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=26}
2021-07-19 01:43:18.201  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@251388fb, timeCost=1}
2021-07-19 01:43:18.204  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@7f3aa81b}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=3}
2021-07-19 01:43:18.205  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=6}
2021-07-19 01:43:26.637  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@7ec980a3}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@7ec980a3, timeCost=8}
2021-07-19 01:43:26.638  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 01:43:26.640  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:43:26.641  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=1}
2021-07-19 01:43:26.643  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 01:43:26.643  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@7ec980a3}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@7ec980a3, timeCost=14}
2021-07-19 01:43:26.645  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=1}
2021-07-19 01:43:26.647  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=2}
2021-07-19 01:43:26.649  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=1}
2021-07-19 01:43:26.650  INFO 12952 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@7ec980a3, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=22}
2021-07-19 01:43:27.394  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=2}
2021-07-19 01:43:44.627  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@15511c42}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@15511c42, timeCost=7}
2021-07-19 01:43:44.628  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 01:43:44.629  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=1}
2021-07-19 01:43:44.630  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=1}
2021-07-19 01:43:44.631  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 01:43:44.631  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@15511c42}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@15511c42, timeCost=11}
2021-07-19 01:43:44.634  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=1}
2021-07-19 01:43:44.636  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=4}
2021-07-19 01:43:44.638  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=1}
2021-07-19 01:43:44.639  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=3}
2021-07-19 01:43:44.642  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=1}
2021-07-19 01:43:44.644  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=4}
2021-07-19 01:43:44.645  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@15511c42, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=26}
2021-07-19 01:43:45.326  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@5bcc3910, timeCost=0}
2021-07-19 01:43:45.330  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@2665755e}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=4}
2021-07-19 01:43:45.331  INFO 12952 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=6}
2021-07-19 01:44:42.012  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3bb5502f}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3bb5502f, timeCost=7}
2021-07-19 01:44:42.013  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 01:44:42.015  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:44:42.016  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=1}
2021-07-19 01:44:42.018  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=2}
2021-07-19 01:44:42.018  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3bb5502f}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3bb5502f, timeCost=13}
2021-07-19 01:44:42.022  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:44:42.023  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=4}
2021-07-19 01:44:42.025  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=1}
2021-07-19 01:44:42.027  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=4}
2021-07-19 01:44:42.030  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=1}
2021-07-19 01:44:42.031  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=4}
2021-07-19 01:44:42.032  INFO 12952 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3bb5502f, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=29}
2021-07-19 01:44:42.324  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@3d4e39ea, timeCost=0}
2021-07-19 01:44:42.328  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@7f532492}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=4}
2021-07-19 01:44:42.329  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=6}
2021-07-19 01:45:12.197  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@48b6bffd}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@48b6bffd, timeCost=12}
2021-07-19 01:45:12.199  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:45:12.202  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:45:12.204  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=2}
2021-07-19 01:45:12.207  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=2}
2021-07-19 01:45:12.207  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@48b6bffd}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@48b6bffd, timeCost=22}
2021-07-19 01:45:12.214  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=3}
2021-07-19 01:45:12.216  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=7}
2021-07-19 01:45:12.221  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=3}
2021-07-19 01:45:12.223  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=7}
2021-07-19 01:45:12.229  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=3}
2021-07-19 01:45:12.231  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=6}
2021-07-19 01:45:12.234  INFO 12952 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@48b6bffd, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=50}
2021-07-19 01:45:12.739  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@11c3a66f, timeCost=0}
2021-07-19 01:45:12.745  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@2753c838}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=5}
2021-07-19 01:45:12.748  INFO 12952 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=11}
2021-07-19 01:45:43.735  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1839a591}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1839a591, timeCost=15}
2021-07-19 01:45:43.739  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=3}
2021-07-19 01:45:43.744  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=5}
2021-07-19 01:45:43.746  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=2}
2021-07-19 01:45:43.749  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=3}
2021-07-19 01:45:43.749  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1839a591}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1839a591, timeCost=29}
2021-07-19 01:45:43.757  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=3}
2021-07-19 01:45:43.760  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=8}
2021-07-19 01:45:43.766  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=4}
2021-07-19 01:45:43.769  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=9}
2021-07-19 01:45:43.775  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=3}
2021-07-19 01:45:43.777  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=7}
2021-07-19 01:45:43.779  INFO 12952 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@1839a591, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=61}
2021-07-19 01:45:44.301  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@67d6440a, timeCost=0}
2021-07-19 01:45:44.307  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@52f86fed}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=6}
2021-07-19 01:45:44.309  INFO 12952 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=10}
2021-07-19 01:46:05.237  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@54d038ba}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@54d038ba, timeCost=11}
2021-07-19 01:46:05.239  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:46:05.241  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:46:05.243  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=2}
2021-07-19 01:46:05.244  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 01:46:05.245  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@54d038ba}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@54d038ba, timeCost=19}
2021-07-19 01:46:05.250  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=3}
2021-07-19 01:46:05.252  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=6}
2021-07-19 01:46:05.256  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=3}
2021-07-19 01:46:05.258  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=6}
2021-07-19 01:46:05.263  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=2}
2021-07-19 01:46:05.264  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=5}
2021-07-19 01:46:05.267  INFO 12952 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@54d038ba, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=42}
2021-07-19 01:46:05.570  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@28322969, timeCost=0}
2021-07-19 01:46:05.573  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@1e659bcb}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=3}
2021-07-19 01:46:05.574  INFO 12952 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=5}
2021-07-19 01:46:26.362  INFO 9092 --- [main] com.jasonc.blog.BlogApplication          : Starting BlogApplication using Java 1.8.0_211 on LAPTOP-O65TACST with PID 9092 (D:\IdeaProjects\jason_chan_blog\target\classes started by Jason Chan in D:\IdeaProjects\jason_chan_blog)
2021-07-19 01:46:26.365 DEBUG 9092 --- [main] com.jasonc.blog.BlogApplication          : Running with Spring Boot v2.5.0, Spring v5.3.7
2021-07-19 01:46:26.365  INFO 9092 --- [main] com.jasonc.blog.BlogApplication          : The following profiles are active: dev
2021-07-19 01:46:27.210  INFO 9092 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-19 01:46:27.213  INFO 9092 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-19 01:46:27.257  INFO 9092 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2021-07-19 01:46:27.561  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [com.jasonc.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:27.617  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:27.748  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:27.751  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'mybatisPlusConfig' of type [com.jasonc.blog.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:27.761  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'mybatisPlusInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:27.767  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:27.768  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:27.777  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:27.802  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:27.817  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'timeMetaObjectHandler' of type [com.jasonc.blog.handler.TimeMetaObjectHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:29.449  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:29.456  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:29.456  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:29.463  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'userMapper' of type [com.sun.proxy.$Proxy68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:29.464  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'userServiceImpl' of type [com.jasonc.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:29.464  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'userShiroRealm' of type [com.jasonc.blog.realm.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:29.494  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:29.518  INFO 9092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-19 01:46:30.253  INFO 9092 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-07-19 01:46:30.265  INFO 9092 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-19 01:46:30.266  INFO 9092 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-07-19 01:46:30.267  INFO 9092 --- [main] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.25] using APR version [1.7.0].
2021-07-19 01:46:30.268  INFO 9092 --- [main] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-07-19 01:46:30.268  INFO 9092 --- [main] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-07-19 01:46:30.271  INFO 9092 --- [main] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1g  21 Apr 2020]
2021-07-19 01:46:30.416  INFO 9092 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-19 01:46:30.416  INFO 9092 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3978 ms
2021-07-19 01:46:31.957  INFO 9092 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-19 01:46:32.580  INFO 9092 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-07-19 01:46:32.592  INFO 9092 --- [main] com.jasonc.blog.BlogApplication          : Started BlogApplication in 6.887 seconds (JVM running for 12.376)
2021-07-19 01:46:32.593  INFO 9092 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2021-07-19 01:46:32.595  INFO 9092 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-07-19 01:46:54.761  INFO 9092 --- [http-nio-8080-exec-1] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [1626493445,1626494462,1626609728; JSESSIONID=D127F40E89A896E3ABF13AD1E1516B29; Hm_lpvt_6b1eb02bacb648d682681dc81149e144=1626630207] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2021-07-19 01:46:54.776  INFO 9092 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-19 01:46:54.777  INFO 9092 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-19 01:46:54.778  INFO 9092 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-07-19 01:46:54.859  INFO 9092 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2021-07-19 01:46:55.028  INFO 9092 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2021-07-19 01:46:55.259  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3e3f7e13}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3e3f7e13, timeCost=184}
2021-07-19 01:46:55.269  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=3}
2021-07-19 01:46:55.271  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:46:55.273  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=2}
2021-07-19 01:46:55.275  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=2}
2021-07-19 01:46:55.275  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3e3f7e13}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3e3f7e13, timeCost=210}
2021-07-19 01:46:57.033  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=5}
2021-07-19 01:46:57.043  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=1750}
2021-07-19 01:46:57.068  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=3}
2021-07-19 01:46:57.071  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=16}
2021-07-19 01:46:57.077  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=3}
2021-07-19 01:46:57.080  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=8}
2021-07-19 01:46:57.082  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@3e3f7e13, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=2240}
2021-07-19 01:46:57.861  INFO 9092 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@248e4519, timeCost=10}
2021-07-19 01:46:57.904  INFO 9092 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@77566506}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=32}
2021-07-19 01:46:57.912  INFO 9092 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=66}
2021-07-19 01:47:20.582  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4c7c0cfe}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4c7c0cfe, timeCost=27}
2021-07-19 01:47:20.587  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=4}
2021-07-19 01:47:20.591  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=3}
2021-07-19 01:47:20.597  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=5}
2021-07-19 01:47:20.610  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=12}
2021-07-19 01:47:20.611  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4c7c0cfe}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4c7c0cfe, timeCost=55}
2021-07-19 01:47:20.623  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=5}
2021-07-19 01:47:20.627  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=14}
2021-07-19 01:47:20.638  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=6}
2021-07-19 01:47:20.642  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=15}
2021-07-19 01:47:20.651  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=5}
2021-07-19 01:47:20.654  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=10}
2021-07-19 01:47:20.657  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4c7c0cfe, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=105}
2021-07-19 01:47:21.261  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@fa20cbe, timeCost=0}
2021-07-19 01:47:21.275  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@63030ebf}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=13}
2021-07-19 01:47:21.281  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=24}
2021-07-19 01:48:00.525  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4a9cd108}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4a9cd108, timeCost=15}
2021-07-19 01:48:00.529  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=4}
2021-07-19 01:48:00.533  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=4}
2021-07-19 01:48:00.536  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=3}
2021-07-19 01:48:00.538  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=2}
2021-07-19 01:48:00.539  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4a9cd108}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4a9cd108, timeCost=29}
2021-07-19 01:48:00.546  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=4}
2021-07-19 01:48:00.548  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=8}
2021-07-19 01:48:00.555  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=4}
2021-07-19 01:48:00.557  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=8}
2021-07-19 01:48:00.564  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=3}
2021-07-19 01:48:00.567  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=8}
2021-07-19 01:48:00.570  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4a9cd108, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=62}
2021-07-19 01:48:00.978  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@30a236be, timeCost=0}
2021-07-19 01:48:00.985  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@34ec6aad}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=6}
2021-07-19 01:48:00.989  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=13}
2021-07-19 01:48:52.862  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@48e7e04d}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@48e7e04d, timeCost=12}
2021-07-19 01:48:52.865  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:48:52.867  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:48:52.868  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=1}
2021-07-19 01:48:52.872  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=3}
2021-07-19 01:48:52.873  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@48e7e04d}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@48e7e04d, timeCost=23}
2021-07-19 01:48:52.879  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=3}
2021-07-19 01:48:52.880  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=5}
2021-07-19 01:48:52.885  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=3}
2021-07-19 01:48:52.887  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=7}
2021-07-19 01:48:52.891  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=2}
2021-07-19 01:48:52.893  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=5}
2021-07-19 01:48:52.895  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@48e7e04d, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=46}
2021-07-19 01:48:53.228  INFO 9092 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@7af8a221, timeCost=0}
2021-07-19 01:48:53.234  INFO 9092 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@44a3e8b}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=6}
2021-07-19 01:48:53.238  INFO 9092 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=11}
2021-07-19 01:49:06.431  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@758c7e57}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@758c7e57, timeCost=22}
2021-07-19 01:49:06.435  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=3}
2021-07-19 01:49:06.439  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=4}
2021-07-19 01:49:06.443  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=4}
2021-07-19 01:49:06.446  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=3}
2021-07-19 01:49:06.447  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@758c7e57}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@758c7e57, timeCost=38}
2021-07-19 01:49:06.456  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=4}
2021-07-19 01:49:06.460  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=11}
2021-07-19 01:49:06.467  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=5}
2021-07-19 01:49:06.470  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=10}
2021-07-19 01:49:06.477  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=4}
2021-07-19 01:49:06.480  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=9}
2021-07-19 01:49:06.483  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@758c7e57, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=76}
2021-07-19 01:49:06.868  INFO 9092 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@3e6f4d2f, timeCost=1}
2021-07-19 01:49:06.873  INFO 9092 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@3a2117f1}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=5}
2021-07-19 01:49:06.876  INFO 9092 --- [http-nio-8080-exec-7] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=10}
2021-07-19 01:49:14.272  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@2b8ae766}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@2b8ae766, timeCost=17}
2021-07-19 01:49:14.277  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=4}
2021-07-19 01:49:14.281  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=3}
2021-07-19 01:49:14.284  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=3}
2021-07-19 01:49:14.289  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=4}
2021-07-19 01:49:14.289  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@2b8ae766}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@2b8ae766, timeCost=35}
2021-07-19 01:49:14.303  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=12}
2021-07-19 01:49:14.307  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=4}
2021-07-19 01:49:14.312  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=4}
2021-07-19 01:49:14.314  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@2b8ae766, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=62}
2021-07-19 01:49:14.765  INFO 9092 --- [http-nio-8080-exec-10] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=3}
2021-07-19 01:49:25.882  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4641275f}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4641275f, timeCost=10}
2021-07-19 01:49:25.884  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:49:25.960  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=3}
2021-07-19 01:49:25.964  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=3}
2021-07-19 01:49:25.967  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=3}
2021-07-19 01:49:25.967  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4641275f}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4641275f, timeCost=95}
2021-07-19 01:49:25.979  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=7}
2021-07-19 01:49:25.982  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=12}
2021-07-19 01:49:25.990  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=5}
2021-07-19 01:49:25.995  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=13}
2021-07-19 01:49:26.004  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=5}
2021-07-19 01:49:26.008  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=10}
2021-07-19 01:49:26.011  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4641275f, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=141}
2021-07-19 01:49:26.499  INFO 9092 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@48068e9f, timeCost=0}
2021-07-19 01:49:26.511  INFO 9092 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@6ca7c47d}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=12}
2021-07-19 01:49:26.514  INFO 9092 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=17}
2021-07-19 01:49:38.931  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5b2a64d0}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5b2a64d0, timeCost=16}
2021-07-19 01:49:38.935  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=3}
2021-07-19 01:49:38.938  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=3}
2021-07-19 01:49:38.941  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=3}
2021-07-19 01:49:38.943  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=2}
2021-07-19 01:49:38.944  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5b2a64d0}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5b2a64d0, timeCost=29}
2021-07-19 01:49:38.951  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=3}
2021-07-19 01:49:38.954  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=8}
2021-07-19 01:49:38.961  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=5}
2021-07-19 01:49:38.963  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=9}
2021-07-19 01:49:38.973  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=4}
2021-07-19 01:49:38.976  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=9}
2021-07-19 01:49:38.978  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@5b2a64d0, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=66}
2021-07-19 01:49:39.415  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@4d804f5f, timeCost=0}
2021-07-19 01:49:39.422  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@2f01d9eb}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=6}
2021-07-19 01:49:39.424  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=11}
2021-07-19 01:49:45.651  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectById', requestParams={id=35}, result=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, timeCost=3}
2021-07-19 01:49:45.671  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.updateById', requestParams={entity=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=163, typeId=16, userId=1}}, result=1, timeCost=12}
2021-07-19 01:49:45.925  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:49:45.925  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getBlogDetailDTOAndConvertToMarkdownById', requestParams={blogId=35}, result=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=163, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, timeCost=383}
2021-07-19 01:49:45.952  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=4}
2021-07-19 01:49:45.955  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=2}
2021-07-19 01:49:45.957  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=2}
2021-07-19 01:49:45.959  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=2}
2021-07-19 01:49:45.961  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=2}
2021-07-19 01:49:45.964  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=2}
2021-07-19 01:49:45.964  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=23}
2021-07-19 01:49:45.964  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.blog', requestParams={model={blog=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=163, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, id=35}, result=blog, timeCost=423}
2021-07-19 01:49:46.268  INFO 9092 --- [http-nio-8080-exec-9] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=162, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=4}
2021-07-19 01:49:46.541  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=3}
2021-07-19 01:49:46.543  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=2}
2021-07-19 01:49:46.545  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=2}
2021-07-19 01:49:46.548  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=2}
2021-07-19 01:49:46.550  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=2}
2021-07-19 01:49:46.552  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=2}
2021-07-19 01:49:46.552  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=14}
2021-07-19 01:49:46.553  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.CommentController.comments', requestParams={model={comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, blogid=35}, result=blog :: commentList, timeCost=20}
2021-07-19 01:50:00.478  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectById', requestParams={id=35}, result=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=163, typeId=16, userId=1}, timeCost=3}
2021-07-19 01:50:00.486  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.updateById', requestParams={entity=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=164, typeId=16, userId=1}}, result=1, timeCost=4}
2021-07-19 01:50:00.493  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=3}
2021-07-19 01:50:00.493  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getBlogDetailDTOAndConvertToMarkdownById', requestParams={blogId=35}, result=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=164, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, timeCost=20}
2021-07-19 01:50:00.517  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=10}
2021-07-19 01:50:00.521  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=4}
2021-07-19 01:50:00.525  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=4}
2021-07-19 01:50:00.528  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=3}
2021-07-19 01:50:00.532  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=4}
2021-07-19 01:50:00.536  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=3}
2021-07-19 01:50:00.536  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=30}
2021-07-19 01:50:00.537  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.blog', requestParams={model={blog=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=164, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, id=35}, result=blog, timeCost=65}
2021-07-19 01:50:00.824  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@7a12b151, timeCost=1}
2021-07-19 01:50:00.829  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@72c97798}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=164, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=5}
2021-07-19 01:50:00.831  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=164, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=9}
2021-07-19 01:50:01.075  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=2}
2021-07-19 01:50:01.078  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=2}
2021-07-19 01:50:01.080  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=2}
2021-07-19 01:50:01.082  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=2}
2021-07-19 01:50:01.084  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=2}
2021-07-19 01:50:01.086  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=2}
2021-07-19 01:50:01.086  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=13}
2021-07-19 01:50:01.087  INFO 9092 --- [http-nio-8080-exec-1] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.CommentController.comments', requestParams={model={comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, blogid=35}, result=blog :: commentList, timeCost=14}
2021-07-19 01:50:25.970  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectById', requestParams={id=35}, result=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=164, typeId=16, userId=1}, timeCost=3}
2021-07-19 01:50:25.977  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.updateById', requestParams={entity=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=165, typeId=16, userId=1}}, result=1, timeCost=4}
2021-07-19 01:50:25.982  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:50:25.982  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getBlogDetailDTOAndConvertToMarkdownById', requestParams={blogId=35}, result=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=165, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, timeCost=17}
2021-07-19 01:50:25.987  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=2}
2021-07-19 01:50:25.989  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=2}
2021-07-19 01:50:25.991  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=1}
2021-07-19 01:50:25.993  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=2}
2021-07-19 01:50:25.995  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=2}
2021-07-19 01:50:25.997  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=2}
2021-07-19 01:50:25.997  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=12}
2021-07-19 01:50:25.997  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.blog', requestParams={model={blog=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=165, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, id=35}, result=blog, timeCost=34}
2021-07-19 01:50:26.243  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@3e52fa3a, timeCost=0}
2021-07-19 01:50:26.248  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@62bfa9ed}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=165, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=4}
2021-07-19 01:50:26.251  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=165, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=9}
2021-07-19 01:50:26.445  INFO 9092 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=3}
2021-07-19 01:50:26.447  INFO 9092 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=2}
2021-07-19 01:50:26.450  INFO 9092 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=2}
2021-07-19 01:50:26.452  INFO 9092 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=2}
2021-07-19 01:50:26.454  INFO 9092 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=2}
2021-07-19 01:50:26.456  INFO 9092 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=2}
2021-07-19 01:50:26.456  INFO 9092 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=14}
2021-07-19 01:50:26.456  INFO 9092 --- [http-nio-8080-exec-2] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.CommentController.comments', requestParams={model={comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, blogid=35}, result=blog :: commentList, timeCost=14}
2021-07-19 01:50:49.573  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectById', requestParams={id=35}, result=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=165, typeId=16, userId=1}, timeCost=2}
2021-07-19 01:50:50.276  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.updateById', requestParams={entity=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=166, typeId=16, userId=1}}, result=1, timeCost=357}
2021-07-19 01:50:50.281  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:50:50.281  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getBlogDetailDTOAndConvertToMarkdownById', requestParams={blogId=35}, result=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=166, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, timeCost=712}
2021-07-19 01:50:50.294  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=2}
2021-07-19 01:50:50.296  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=2}
2021-07-19 01:50:50.298  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=2}
2021-07-19 01:50:50.300  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=2}
2021-07-19 01:50:50.302  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=2}
2021-07-19 01:50:50.303  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=1}
2021-07-19 01:50:50.303  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=11}
2021-07-19 01:50:50.304  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.blog', requestParams={model={blog=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=166, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, id=35}, result=blog, timeCost=737}
2021-07-19 01:50:50.544  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@193b2de3, timeCost=0}
2021-07-19 01:50:50.549  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@64875a51}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=166, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=3}
2021-07-19 01:50:50.692  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=3}
2021-07-19 01:50:50.694  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=2}
2021-07-19 01:50:50.696  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=2}
2021-07-19 01:50:50.698  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=2}
2021-07-19 01:50:50.700  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=2}
2021-07-19 01:50:50.701  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=1}
2021-07-19 01:50:50.701  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=12}
2021-07-19 01:50:50.702  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.CommentController.comments', requestParams={model={comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, blogid=35}, result=blog :: commentList, timeCost=13}
2021-07-19 01:50:50.891  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=166, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=347}
2021-07-19 01:50:59.129  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.updateById', requestParams={entity=Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=166, typeId=16, userId=1}}, result=1, timeCost=2}
2021-07-19 01:50:59.134  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:50:59.134  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getBlogDetailDTOAndConvertToMarkdownById', requestParams={blogId=35}, result=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=166, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, timeCost=10}
2021-07-19 01:50:59.137  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=2}
2021-07-19 01:50:59.139  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=1}
2021-07-19 01:50:59.141  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=1}
2021-07-19 01:50:59.144  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=2}
2021-07-19 01:50:59.145  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=1}
2021-07-19 01:50:59.147  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=2}
2021-07-19 01:50:59.147  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=12}
2021-07-19 01:50:59.147  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/blog/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.blog', requestParams={model={blog=BlogDetailDTO{id=35, appreciation=true, commentabled=true, content='<h2 id="一-简述" style="color : white">一. 简述</h2>
<p>判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。</p>
<p>空集合:</p>
<p>isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：</p>
<pre><code class="language-java">List list2 = new ArrayList()
</code></pre>
<p>list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.</p>
<p>null判断：</p>
<p>list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。</p>
<h2 id="二-建议" style="color : white">二. 建议</h2>
<p>在编码时，采用:</p>
<pre><code class="language-java">if(list != null &amp;&amp; !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
</code></pre>
', description='判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null', firstPicture='https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg', flag='转载', published=true, recommend=true, shareStatement=true, title='java中的list为空（size==0）与list为null的区别', updateTime=Tue Mar 09 23:09:56 CST 2021, views=166, typeId=16, userId=1, nickname='管理员', avatar='https://unsplash.it/100/100?image=1005', tags=[Tag{id=8, name=List集合}], tagIds='8'}, comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, id=35}, result=blog, timeCost=24}
2021-07-19 01:50:59.380  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=166, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=3}
2021-07-19 01:50:59.537  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listRootCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}], timeCost=3}
2021-07-19 01:50:59.539  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=25}, result=[], timeCost=2}
2021-07-19 01:50:59.542  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=26}, result=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=null, rootCommentId=26, replyCommentDTOs=null}], timeCost=2}
2021-07-19 01:50:59.545  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.getParentCommentDTO', requestParams={parentCommentId=26}, result=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, timeCost=2}
2021-07-19 01:50:59.547  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=44}, result=[], timeCost=2}
2021-07-19 01:50:59.550  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.CommentMapper.listReplyCommentDTO', requestParams={rootCommentId=45}, result=[], timeCost=3}
2021-07-19 01:50:59.550  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.CommentServiceImpl.listCommentDTOByBlogId', requestParams={blogId=35}, result=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}], timeCost=16}
2021-07-19 01:50:59.551  INFO 9092 --- [http-nio-8080-exec-3] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/comments/35', httpMethodd='GET', classMethod='com.jasonc.blog.controller.CommentController.comments', requestParams={model={comments=[CommentDTO{id=25, adminComment=0, avatar='/images/userAvatar.jpg', content='haha<img width="30" height="30" class="emoji_icon" src="/images/emoji/netEasyMusic/dai.png">', createTime=Sun Jul 11 19:57:19 CST 2021, email='test@gamil.com', nickname='test1', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[CommentDTO{id=40, adminComment=0, avatar='/images/userAvatar.jpg', content='simimase', createTime=Tue Jul 13 23:50:39 CST 2021, email='2@1', nickname='tess', blogId=35, parentCommentId=26, parentCommentDTO=CommentDTO{id=26, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_闭嘴.png">', createTime=Sun Jul 11 19:58:30 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=null}, rootCommentId=26, replyCommentDTOs=null}]}, CommentDTO{id=44, adminComment=0, avatar='/images/userAvatar.jpg', content='ixliuaf', createTime=Sun Jul 18 02:52:41 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}, CommentDTO{id=45, adminComment=0, avatar='/images/userAvatar.jpg', content='<img width="30" height="30" class="emoji_icon" src="/images/emoji/tv_小电视/tv_困.png">', createTime=Sun Jul 18 02:53:04 CST 2021, email='2@1', nickname='2', blogId=35, parentCommentId=-1, parentCommentDTO=null, rootCommentId=-1, replyCommentDTOs=[]}]}, blogid=35}, result=blog :: commentList, timeCost=17}
2021-07-19 01:52:55.157  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4d56cbca}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4d56cbca, timeCost=9}
2021-07-19 01:52:55.158  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=1}
2021-07-19 01:52:55.160  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=1}
2021-07-19 01:52:55.162  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=2}
2021-07-19 01:52:55.163  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=1}
2021-07-19 01:52:55.163  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4d56cbca}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4d56cbca, timeCost=15}
2021-07-19 01:52:55.168  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:52:55.169  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=5}
2021-07-19 01:52:55.173  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=3}
2021-07-19 01:52:55.174  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=5}
2021-07-19 01:52:55.178  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=2}
2021-07-19 01:52:55.179  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=4}
2021-07-19 01:52:55.180  INFO 9092 --- [http-nio-8080-exec-6] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@4d56cbca, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=33}
2021-07-19 01:52:55.481  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@7a73bb34, timeCost=0}
2021-07-19 01:52:55.485  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@194295e2}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=166, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=3}
2021-07-19 01:52:55.487  INFO 9092 --- [http-nio-8080-exec-4] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=166, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=7}
2021-07-19 01:53:11.487  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@8affb8c}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@8affb8c, timeCost=11}
2021-07-19 01:53:11.489  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=35}, result=[Tag{id=8, name=List集合}], timeCost=2}
2021-07-19 01:53:11.491  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=53}, result=[Tag{id=13, name=其他}], timeCost=2}
2021-07-19 01:53:11.493  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=52}, result=[Tag{id=11, name=MySQL}], timeCost=2}
2021-07-19 01:53:11.495  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTags', requestParams={id=51}, result=[Tag{id=10, name=SpringBoot常用依赖}], timeCost=2}
2021-07-19 01:53:11.495  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getIndexBlogDTOPageByCondition', requestParams={blogSearchConditionDTO=BlogSearchConditionDTO{title='', typeId=null, recommend=true, published=true, tagId='null'}, indexBlogDTOIPage=com.baomidou.mybatisplus.extension.plugins.pagination.Page@8affb8c}, result=com.baomidou.mybatisplus.extension.plugins.pagination.Page@8affb8c, timeCost=19}
2021-07-19 01:53:11.501  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TypeMapper.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=2}
2021-07-19 01:53:11.503  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TypeServiceImpl.getTopTypeNameAndBlogCountDTO', requestParams={size=6}, result=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], timeCost=6}
2021-07-19 01:53:11.507  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.TagMapper.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=3}
2021-07-19 01:53:11.508  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.TagServiceImpl.getTopTagNameAndBlogCountDTO', requestParams={size=10}, result=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], timeCost=5}
2021-07-19 01:53:11.512  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.mapper.BlogMapper.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=2}
2021-07-19 01:53:11.514  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.service.impl.BlogServiceImpl.getTopRecommendBlogDTO', requestParams={size=8}, result=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}], timeCost=5}
2021-07-19 01:53:11.516  INFO 9092 --- [http-nio-8080-exec-5] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.index', requestParams={model={pageInfo=com.baomidou.mybatisplus.extension.plugins.pagination.Page@8affb8c, tags=[TagNameAndBlogCountDTO{id='8', tagName='List集合', blogCount=1}, TagNameAndBlogCountDTO{id='10', tagName='SpringBoot常用依赖', blogCount=1}, TagNameAndBlogCountDTO{id='11', tagName='MySQL', blogCount=1}, TagNameAndBlogCountDTO{id='13', tagName='其他', blogCount=1}], types=[TypeNameAndBlogCountDTO{id=16, typeName='java基础', blogCount=2}, TypeNameAndBlogCountDTO{id=17, typeName='Maven', blogCount=1}, TypeNameAndBlogCountDTO{id=18, typeName='数据库', blogCount=1}], recommendBlogs=[RecommendBlogDTO{id=35, title='java中的list为空（size==0）与list为null的区别'}, RecommendBlogDTO{id=53, title='StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别'}, RecommendBlogDTO{id=52, title='MySQL插入emoji表情错误的3种解决方案'}, RecommendBlogDTO{id=51, title='commonmark使用方法'}]}, pageNum=1}, result=index, timeCost=41}
2021-07-19 01:53:11.817  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.extension.service.IService.query', requestParams={}, result=com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper@5d3f89bc, timeCost=0}
2021-07-19 01:53:11.821  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.baomidou.mybatisplus.core.mapper.BaseMapper.selectList', requestParams={queryWrapper=com.baomidou.mybatisplus.core.conditions.query.QueryWrapper@71f1e2e1}, result=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=166, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}], timeCost=4}
2021-07-19 01:53:11.823  INFO 9092 --- [http-nio-8080-exec-8] com.jasonc.blog.aspect.LogAspect         : Request Info : RequestInfo{ip='0:0:0:0:0:0:0:1', url='http://localhost:8080/footer/newblog', httpMethodd='GET', classMethod='com.jasonc.blog.controller.IndexController.newBlogs', requestParams={model={newblogs=[Blog{id=35, appreciation=true, commentabled=true, content=## 一. 简述

判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null，这是两码事。                

空集合: 

isEmpty() 或者(list.size() == 0)用于判断List内容是否为空，即表里一个元素也没有， 但是使用isEmpty()和size()的前提是，list是一个空集合，而不是null，所以为了避免异常，建议在使用或赋值list集合之前，做一次空集合创建处理，进行内存空间分配，即：
```java
List list2 = new ArrayList()
```
list.isEmpty()和list.size()==0 没有区别， isEmpty()判断有没有元素，而size()返回有几个元素，如果判断一个集合有无元素，建议用isEmpty()方法.  

null判断： 

list等于null，可理解为没有对list集合分配内存空间，实际上压根就不存在。

## 二. 建议

在编码时，采用:
```java
if(list != null && !list.isEmpty()){
	这个里面取list中的值
} else {
 	 做其他处理
}
```, createTime=Mon Mar 08 01:36:58 CST 2021, description=判断一个list集合是否为空，我们的惯性思维是判断list是否等于null即可，但是在Java中，list集合为空还是为null, firstPicture=https://danielkordan.com/wp-content/uploads/2017/06/DSC_8080-Pano%D0%BE%D0%BE.jpg, flag=转载, published=true, recommend=true, shareStatement=true, title=java中的list为空（size==0）与list为null的区别, updateTime=Thu Mar 18 22:34:35 CST 2021, views=166, typeId=16, userId=1}, Blog{id=53, appreciation=true, commentabled=true, content=- isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空.
- isNoneBlank 和isNotBlank 在同一个参数的情况下, 含义是一样的, 但是isNoneBlank 的参数, 可以是一个字符数组, 当isNoneBlank 的参数是一个数组的时候, 就是说有一个参数为null, 那么返回都会返回false.
- 一般情况下 isNoneBlank 用于校验表单的参数是否为空. 如果有一个为空, 都不满足条件.


```shell
isNotEmpty(str)等价于 str != null && str.length > 0
isNotBlank(str) 等价于 str != null && str.length > 0 && str.trim().length > 0
同理
isEmpty 等价于 str == null || str.length == 0
isBlank  等价于 str == null || str.length == 0 || str.trim().length == 0

str.length > 0 && str.trim().length > 0  --->   str.length > 0
```, createTime=Wed Mar 17 21:45:44 CST 2021, description=isEmpty和isBlank不同的地方, isEmpty认为空格(无论单空格还是多空格)都是不是空. 而isBlank 认为空格,换行符号(\n),tab(\t)都是空., firstPicture=https://cdn.shopify.com/s/files/1/0076/3854/8577/products/hopefall-max-rive-full_f0c414c6-4dd7-404a-a530-9fb91f89af18_1800x1800.jpg?v=1615732547, flag=原创, published=true, recommend=true, shareStatement=true, title=StringUtils中 isNotEmpty ，isNotBlank，isNoneBlank的区别, updateTime=Thu Mar 18 00:12:47 CST 2021, views=4, typeId=16, userId=1}, Blog{id=52, appreciation=true, commentabled=true, content=报错信息：

```shell
    2021-03-14 01:45:56.993 ERROR 20200 --- [nio-8080-exec-6] c.j.b.h.ControllerExceptionHandler       : Request URL : http://192.168.43.240:8080/comments, Exception : 
    ### Error updating database.  Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
    ### The error may exist in com/jasonc/blog/mapper/CommentMapper.java (best guess)
    ### The error may involve com.jasonc.blog.mapper.CommentMapper.insert-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO t_comment  ( admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id, root_comment_id )  VALUES  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ### Cause: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x98\x80' for column 'content' at row 1
```

错误原因：mysql的UTF-8只支持三个字节的存储，而一般字符是三个字节，但是0xF0 0x9F 0x98 0x84对应的是智能手机输入法中的emoji表情，是4个字节，所以存储不了。  

注：ASCII 码中，一个英文字母（不分大小写）为一个字节，一个中文汉字为两个字节。. UTF-8 编码中，一个英文字为一个字节，一个中文为三个字节。. Unicode 编码中，一个英文为一个字节，一个中文为两个字节。. 符号：英文标点为一个字节，中文标点为两个字节。. 例如：英文句号 . 占1个字节的大小，中文句号 。. 占2个字节的大小。. UTF-16 编码中，一个英文字母字符或一个汉字字符存储都需要 2 个字节（Unicode 扩展区的一些汉字存储需要 4 个字节）。. UTF-32 编码中，世界上任何字符的存储都需要 4 个字节。.

而mysql为了解决这个问题，在5.5.3版本之后转而支持了存储4个字节的utf8字符，字符集为utf8mb4.这个相当于windowsX64和windowsX86的区别，64位是兼容32位的，也就是说utf8mb4存取utf8都是没有问题的。

解决方案：
1. 第一种：将MySQL升级到5.5.3版本以上并将编码从utf8转换成utf8mb4，修改MySQL安装目录下的my.cnf， 然后修改数据表的编码为utf8mb4，执行命令：
 ```sql
 ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4;
```
2. 第二种：加入依赖

```xml
<!-- https://mvnrepository.com/artifact/com.vdurmont/emoji-java -->
<dependency>
    <groupId>com.vdurmont</groupId>
    <artifactId>emoji-java</artifactId>
    <version>4.0.0</version>
</dependency>

```

使用这个方法过滤掉字符串内的emoji表情

```java
String string = EmojiParser.removeAllEmojis(param);
```
3. 第三种：改变待插入字段的数据类型，由varchar改为varbinary，这是一种可变的二进制存储.对应的java类型则是byte[], createTime=Sun Mar 14 01:41:05 CST 2021, description=MySQL插入emoji表情错误的3种解决方案, firstPicture=https://danielkordan.com/wp-content/uploads/2020/05/DSC_7456-2%D0%BE%D0%BE-1030x824.jpg, flag=原创, published=true, recommend=true, shareStatement=true, title=MySQL插入emoji表情错误的3种解决方案, updateTime=Wed Mar 17 12:26:32 CST 2021, views=30, typeId=18, userId=1}]}}, result=_fragments :: newblogList, timeCost=8}
