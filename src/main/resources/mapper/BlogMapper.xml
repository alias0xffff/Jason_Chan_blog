<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jasonc.blog.mapper.BlogMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.jasonc.blog.entity.Blog">
        <id column="id" property="id"/>
        <result column="appreciation" property="appreciation"/>
        <result column="commentabled" property="commentabled"/>
        <result column="content" property="content"/>
        <result column="create_time" property="createTime"/>
        <result column="description" property="description"/>
        <result column="first_picture" property="firstPicture"/>
        <result column="flag" property="flag"/>
        <result column="published" property="published"/>
        <result column="recommend" property="recommend"/>
        <result column="share_statement" property="shareStatement"/>
        <result column="title" property="title"/>
        <result column="update_time" property="updateTime"/>
        <result column="views" property="views"/>
        <result column="type_id" property="typeId"/>
        <result column="user_id" property="userId"/>
    </resultMap>

    <select id="getBlogQueryPage" resultType="com.jasonc.blog.dto.admin.BlogQueryDTO">
        select b.id,
               b.title,
               b.update_time,
               b.published,
               b.recommend,
               b.type_id,
               t.id,
               t.name typeName
        from t_blog b
                 left join
             t_type t on b.type_id = t.id
        order by b.update_time desc
    </select>

    <select id="searchBlogByCondition" resultType="com.jasonc.blog.dto.admin.BlogQueryDTO">
        <bind name="pattern" value="'%' + blogSearchConditionDTO.title + '%'"/>
        select b.id,
        b.title,
        b.update_time,
        b.published,
        b.recommend,
        b.type_id,
        t.id,
        t.name typeName
        from t_blog b
        left join
        t_type t on b.type_id = t.id
        <where>
            <if test="blogSearchConditionDTO.recommend == true">
                and b.recommend = #{blogSearchConditionDTO.recommend}
            </if>
            <if test="blogSearchConditionDTO.title != null and blogSearchConditionDTO.title != ''">
                and b.title like #{pattern}
            </if>
            <if test="blogSearchConditionDTO.typeId != null">
                and b.type_id = #{blogSearchConditionDTO.typeId}
            </if>
            <if test="blogSearchConditionDTO.published == true">
                and b.published = #{blogSearchConditionDTO.published}
            </if>
        </where>

        order by b.update_time desc
    </select>

    <select id="getIndexBlogDTOPageByCondition" resultType="com.jasonc.blog.dto.IndexBlogDTO">
        <bind name="pattern" value=" '%' + blogSearchConditionDTO.title + '%'"/>
        select distinct tb.id,
        tb.title,
        tb.views,
        tb.first_picture,
        tb.update_time,
        tb.description,
        tb.type_id,
        tt.name typeName,
        tu.avatar,
        tu.nickname
        from jason_chan_blog.t_blog tb
        join t_type tt on tb.type_id = tt.id
        join t_user tu on tb.user_id = tu.id
        join t_blog_tags tbt on tb.id = tbt.blog_id
        join t_tag t on tbt.tag_id = t.id
        <where>
            <if test="blogSearchConditionDTO.title != null and blogSearchConditionDTO.title != ''">
                and tb.title like #{pattern}
            </if>
            <if test="blogSearchConditionDTO.typeId != null">
                and tt.id = #{blogSearchConditionDTO.typeId}
            </if>
            <if test="blogSearchConditionDTO.tagId">
                and t.id = #{blogSearchConditionDTO.tagId}
            </if>
            and tb.published = true
        </where>
        order by update_time desc
    </select>

    <select id="getTopRecommendBlogDTO" resultType="com.jasonc.blog.dto.RecommendBlogDTO">
        select id, title
        from jason_chan_blog.t_blog
        where recommend = true
          and published = true
        order by update_time desc
        limit #{size}
    </select>


    <select id="getTags" resultType="com.jasonc.blog.entity.Tag">
        select tt.name, tt.id
        from jason_chan_blog.t_tag tt
                 join t_blog_tags tbt on tt.id = tbt.tag_id
        where tbt.blog_id = #{id}
    </select>

    <select id="getGroupYear" resultType="java.lang.String">
        select YEAR(update_time) year
        from t_blog
        where published = true
        group by year
        order by year desc
    </select>

    <select id="getBlogQueryPerYear" resultType="com.jasonc.blog.dto.admin.BlogQueryDTO">
        select id, title, update_time, flag
        from t_blog
        where year(update_time) = #{year}
          and published = true
        order by update_time desc
    </select>

</mapper>
